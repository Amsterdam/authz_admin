authn_service:
  roles:
    "1": Beheerder Datapunt
    "2": Eén of andere rol


authz_service:
  root_path: /oauth2
  bind_host: localhost
  bind_port: 8110
  idps:
    tma_oauth2:
      client_id: ${TMA_OAUTH2_CLIENT_ID:-undefined}
      authorization_uri: ${TMA_OAUTH2_AUTHZ_URI:-undefined}


authz_admin_service:
  prefix: /authz_admin
  bind_host: localhost
  bind_port: 8112
  datasets:
    CA:
      name: Datacatalogus Amsterdam
      described_by: 'https://data.amsterdam.nl/#?dsd=catalogus&dsp=1&dsv=CARDS&mpb=topografie'
      scopes:
        L1:
          name: Level 1
          included_by: L2
          description: |-
            TODO: beschrijven wat L1 meer heeft dan anoniem.
        L2:
          name: Level 2
          includes: L1
          description: |-
            TODO: beschrijven wat L2 meer heeft dan L1.
    HR:
      name: Handelsregister
      described_by: 'https://www.amsterdam.nl/stelselpedia/hr-index/'
      scopes:
        INF:
          name: Onbeperkt aantal bevragingen
          description: |-
            Deze permissie geeft gebruikers het recht onbeperkt informatie op te
            vragen (anonieme gebruikers mogen maximaal X [TODO --PvB] bevragingen
            per dag doen).


client_admin_service:
  prefix: /client_admin
  bind_host: localhost
  bind_port: 8111


jwt:
  refreshtokens:
    secret: refresh_testsecret
    algorithm: HS256
    lifetime: ${JWT_LIFETIME:-43200}  # 12 × 3600
  accesstokens:
    secret: access_testsecret
    algorithm: HS256
    lifetime: 300

postgres:
  host: ${DB_HOST:-localhost}
  port: ${DB_PORT:-5432}
  user: ${DB_USER:-oauth2}
  password: ${DB_PASS:-oauth2}
  dbname: ${DB_DATABASE:-oauth2}

logging:
  version: 1
  formatters:
    default:
      format: '%(asctime)s oauth2 %(levelname)-8s %(module)s:%(lineno)d: %(message)s'
  handlers:
    console:
      class: logging.StreamHandler
      formatter: default
    aiohttp.access:
      class: logging.StreamHandler
  loggers:
    oauth2:
      level: ${LOGLEVEL:-DEBUG}
      handlers: [console]
      propagate: false
    aiohttp.access:
      level: ${LOGLEVEL:-DEBUG}
      handlers: [aiohttp.access]
      propagate: false
    aiohttp:
      propagate: true
#    aiohttp.*:
#      propagate: true
    rest_utils:
      propagate: true
  root:
    level: ${LOGLEVEL:-WARNING}
    handlers: [console]
