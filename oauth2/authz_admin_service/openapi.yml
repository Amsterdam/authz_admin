swagger: '2.0'

info:
  title: Datapunt Authorization Management Service
  termsOfService: TODO
  contact:
    name: Datapunt Amsterdam
    url: https://data.amsterdam.nl/
    email: datapunt.ois@amsterdam.nl
  # license:
  #   name: Datapunt Public License
  #   url: https://datapunt.amsterdam.nl/license
  version: '1.0.0'

host: localhost:8112

# basePath: /oauth2/authz_admin

schemes:
  - http

produces:
  - application/hal+json


parameters:
  page:
    name: page
    in: query
    description: |
      The page number to return. Requires the `items` parameter. The first page
      has number 1.
    required: false
    type: string
    pattern: "^[1-9]\\d*$"
  items:
    name: page_items
    in: query
    description: "The maximum number of items to return in one response."
    required: false
    type: string
    pattern: "^(?:0|[1-9]\\d*)$"
    default: '0'
  embed:
    name: embed
    in: query
    description: |
      Linked resources to embed.  For example: `foo(bar,baz())`.  This would
      embed all resources with link relation `foo`.

      * In these `foo`-resources, all resources of link types `bar` and `baz`
        will be embedded.
      * In the `bar` resource(s), the default embedding will occur.
      * In the `baz` resource(s), no embedding will occur.
    type: string
    pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"


responses: {}


securityDefinitions:

  OAuth2:
    type: oauth2
    description: |
      Authorization through our own Authorization Service.
    scopes:
      ead: Edit account details
      ear: Edit account roles
    flow: implicit
    authorizationUrl: 'http://localhost:8110/authorization'

  API-key:
    type: apiKey
    description: |
      Use `apikey` as the authorization scheme.
      For example: `Authorization: apikey foo...bar`.
    in: header
    name: Authorization

  None:
    type: apiKey
    description: |
      Dummy [Security Scheme
      Object](//swagger.io/specification/#securitySchemeObject);  used in some
      [Security Definitions
      Objects](//swagger.io/specification/#securityDefinitionsObject) to
      indicate that authorization is _optional._
    in: header
    name: Authorization

#  OAuth2:
#    type: oauth2
#    scopes:
#      grnt: Grant rights to others
#    description: >-
#      OAuth2 autorisatie op basis van authenticatie bij Toegangsmakelaar
#      Amsterdam (TMA).
#    flow: accessCode
#    authorizationUrl: 'https://api.data.amsterdam.nl/oauth2/authz'
#    tokenUrl: 'https://api.data.amsterdam.nl/oauth2/token'


definitions:


  HRef:
    description: |
      Its value is either a URI [RFC3986] or a URI Template [RFC6570]. If
      the value is a URI Template then the Link Object SHOULD have a
      "templated" attribute whose value is true.
    type: string
    format: url
    example: "http://www.example.com/"


  Name:
    description: |
      Its value MAY be used as a secondary key for selecting Link Objects
      which share the same relation type.
    type: string
    example:


  Templated:
    description: |
      Its value is boolean and SHOULD be true when the Link Object's "href"
      property is a URI Template. Its value SHOULD be considered false if it
      is undefined or any other value than true.
    type: boolean
    default: false


  Link:
    title: Link Object
    description: |
      A Link Object represents a hyperlink from the containing resource to a
      URI.
    type: object
    required:
      - href
    properties:
      href:
        $ref: '#/definitions/HRef'
      name:
        $ref: '#/definitions/Name'
      templated:
        $ref: '#/definitions/Templated'
      type:
        description: |
          Its value is a string used as a hint to indicate the media type
          expected when dereferencing the target resource.
        type: string
        pattern: "^[-+\\w.]+/[-+\\w.]+(?:;\\s*\\w+=(?:\"(?:\"\"|[^\"])*\"|[^;,\"][^;,]*)?)*$"
        example: "application/hal+json"
      deprecation:
        description: |
          Its presence indicates that the link is to be deprecated (i.e.
          removed) at a future date. Its value is a URL that SHOULD provide
          further information about the deprecation. A client SHOULD provide
          some notification (for example, by logging a warning message) whenever
          it traverses over a link that has this property. The notification
          SHOULD include the deprecation property's value so that a client
          maintainer can easily find information about the deprecation.
        type: string
        example: "Deprecated. Don't do this again."
      profile:
        description: |
          Its value is a string which is a URI that hints about the profile
          [RFC6906] of the target resource.
        type: string
        format: url
      title:
        description: |
          Its value is a string and is intended for labelling the link with a
          human-readable identifier (as defined by [RFC5988]).
        type: string
      hreflang:
        description: |
          Its value is a string and is intended for indicating the language of
          the target resource (as defined by [RFC5988]).
        type: string


  # LinkOrLinks:
  #   title: Link Object or list of Link Objects
  #   type: [object, array]
  #   items:
  #     $ref: '#/definitions/Link'
  #   required:
  #     - href
  #   properties:
  #     $ref: '#/definitions/Link/properties'


  CuriesLink:
    description: |
      Custom link relation types (Extension Relation Types in [RFC5988]) SHOULD
      be URIs that when dereferenced in a web browser provide relevant
      documentation, in the form of an HTML page, about the meaning and/or
      behaviour of the target Resource. This will improve the discoverability of
      the API. The CURIE Syntax [W3C.NOTE-curie-20101216] MAY be used for
      brevity for these URIs. CURIEs are established within a HAL document via a
      set of Link Objects with the relation type "curies" on the root Resource
      Object. These links contain a URI Template with the token 'rel', and are
      named via the "name" property.
    allOf:
      - $ref: '#/definitions/Link'
      - required:
        - href
        - name
        - templated
        properties:
          href:
            $ref: '#/definitions/HRef'
          name:
            $ref: '#/definitions/Name'
          templated:
            $ref: '#/definitions/Templated'


  Resource:
    title: Resource Object
    description: |
      A Resource Object represents a resource. It has two reserved properties:
      (1) "_links" which contain links to other resources, and (2) "_embedded"
      which contain embedded resources. All other properties MUST be valid JSON,
      and represent the current state of the resource.
    type: object
    properties:
      _links:
        description: |
          It is an object whose property names are link relation types (as
          defined by [RFC5988]) and values are either a Link Object or an array
          of Link Objects.  The subject resource of these links is the Resource
          Object of which the containing "_links" object is a property.
        type: object
        required:
          - self
        properties:
          self:
            $ref: '#/definitions/Link'
          items:
            type: array
            items:
              $ref: '#/definitions/Link'
          curies:
            type: array
            items:
              $ref: '#/definitions/CuriesLink'
        additionalProperties:
          # $ref: '#/definitions/LinkOrLinks'
          $ref: '#/definitions/Link'
      _embedded:
        description: |
          It is an object whose property names are link relation types (as
          defined by [RFC5988]) and values are either a Resource Object or an
          array of Resource Objects. Embedded Resources MAY be a full, partial,
          or inconsistent version of the representation served from the target
          URI.
        type: object
        additionalProperties:
          $ref: '#/definitions/Resource'
          #$ref: '#/definitions/ResourceOrResources'


  # ResourceOrResources:
  #   title: Resource Object or list of Resource Objects
  #   description: |
  #     A Resource Object represents a resource. It has two reserved properties:
  #     (1) "_links" which contain links to other resources, and (2) "_embedded"
  #     which contain embedded resources. All other properties MUST be valid JSON,
  #     and represent the current state of the resource.
  #   type: [object, array]
  #   items:
  #     $ref: '#/definitions/Resource'
  #   properties:
  #     $ref: '#/definitions/Resource/properties'


paths:


  "/":
    get:
      parameters:
        - $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/datasets":
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: "item"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/datasets/{dataset}":
    parameters:
      - name: dataset
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: "scopes"
        #- $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/datasets/{dataset}/scopes":
    parameters:
      - name: dataset
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: "item"
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/datasets/{dataset}/scopes/{scope}":
    parameters:
      - name: dataset
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
      - name: scope
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
    get:
      parameters:
        - $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/idps":
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: item
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/idps/{idp}":
    parameters:
      - name: idp
        in: path
        required: true
        type: string
        pattern: "^\\w{1,32}$"
    get:
      parameters:
        - $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/idps/{idp}/users":
    parameters:
      - name: idp
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: item
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/idps/{idp}/users/{user}":
    parameters:
      - name: idp
        in: path
        required: true
        type: string
        pattern: "^\\w{1,4}$"
      - name: user
        in: path
        required: true
        type: string
    get:
      parameters:
        - $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/profiles":
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: item
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/profiles/{profile}":
    parameters:
      - name: profile
        in: path
        required: true
        type: string
        pattern: "^\\w{1,32}$"
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: scopes
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  "/profiles/{profile}/scopes":
    parameters:
      - name: profile
        in: path
        required: true
        type: string
        pattern: "^\\w{1,32}$"
    get:
      parameters:
        - name: embed
          in: query
          type: string
          pattern: "^(?:,?[a-z_]\\w*|,?\\)|\\()+$"
          default: item
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  /self:
    get:
      parameters:
        - $ref: '#/parameters/embed'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'


  /users:
    get:
      parameters:
        - name: typeahead
          in: query
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Resource'
